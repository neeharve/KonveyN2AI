name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Validate version synchronization
      run: |
        # Validate that all linting tool versions are synchronized
        python scripts/validate_tool_versions.py

    - name: Verify installed tool versions
      run: |
        echo "=== Verifying installed tool versions ==="
        echo "Expected versions from requirements.txt:"
        grep -E "(black|ruff|mypy|bandit|pre-commit)==" requirements.txt
        echo ""
        echo "Installed versions:"
        black --version
        ruff --version
        mypy --version
        bandit --version
        pre-commit --version
        echo ""
        echo "=== Version verification complete ==="

    - name: Run code quality validation (CHECK-ONLY MODE)
      run: |
        # CI runs in validation-only mode - NO file modifications allowed
        # All fixes must be applied locally before pushing to CI
        echo "üîç Running validation-only linting and formatting checks..."
        echo "‚ùå CI will FAIL if any issues are found - fix locally first!"

        # Use CI-specific pre-commit config with --check flags only
        pre-commit run --config .pre-commit-config-ci.yaml --all-files

    - name: Run tests
      run: |
        PYTHONPATH=src python -m pytest tests/ -v --tb=short

    - name: Run project setup tests
      run: |
        PYTHONPATH=src python tests/test_project_setup.py

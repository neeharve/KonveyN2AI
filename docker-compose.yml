version: '3.8'

services:
  # Svami Orchestrator Service - Entry point and workflow coordinator
  svami:
    build:
      context: .
      dockerfile: Dockerfile.svami
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - SVAMI_HOST=0.0.0.0
      - SVAMI_PORT=8080
      - JANAPADA_URL=http://janapada:8081
      - AMATYA_URL=http://amatya:8082
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    depends_on:
      - janapada
      - amatya
    networks:
      - konveyn2ai
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 128M

  # Janapada Memory Service - Semantic search and memory management
  janapada:
    build:
      context: .
      dockerfile: Dockerfile.janapada
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - JANAPADA_HOST=0.0.0.0
      - JANAPADA_PORT=8081
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - INDEX_ENDPOINT_ID=${INDEX_ENDPOINT_ID}
      - INDEX_ID=${INDEX_ID}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    networks:
      - konveyn2ai
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M

  # Amatya Role Prompter Service - Role-based advice generation
  amatya:
    build:
      context: .
      dockerfile: Dockerfile.amatya
    ports:
      - "8082:8082"
    environment:
      - PORT=8082
      - AMATYA_HOST=0.0.0.0
      - AMATYA_PORT=8082
      - GOOGLE_APPLICATION_CREDENTIALS=/app/credentials.json
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GOOGLE_API_KEY=${GOOGLE_API_KEY}
    volumes:
      - ./credentials.json:/app/credentials.json:ro
    networks:
      - konveyn2ai
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 768M
        reservations:
          cpus: '0.25'
          memory: 128M

networks:
  konveyn2ai:
    driver: bridge
    name: konveyn2ai-network

volumes:
  credentials_data:
    driver: local
# Multi-stage Dockerfile for Svami Orchestrator Service
# Optimized for Cloud Run deployment

# Stage 1: Build dependencies
FROM python:3.11-slim as builder

# Install system dependencies for building
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY src/svami-orchestrator/requirements.txt ./svami-requirements.txt
COPY src/common/requirements.txt ./common-requirements.txt

# Create consolidated requirements file
RUN cat svami-requirements.txt common-requirements.txt > requirements.txt

# Install Python dependencies
RUN pip install --no-cache-dir --user -r requirements.txt

# Stage 2: Runtime image
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create non-root user for security
RUN useradd --create-home --shell /bin/bash appuser

# Set working directory
WORKDIR /app

# Copy Python packages from builder stage
COPY --from=builder /root/.local /home/appuser/.local

# Copy application code
COPY src/common/ ./src/common/
COPY src/guard_fort/ ./src/guard_fort/
COPY src/svami-orchestrator/ ./src/svami-orchestrator/

# Set ownership to appuser
RUN chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Add local Python packages to PATH
ENV PATH=/home/appuser/.local/bin:$PATH
ENV PYTHONPATH=/app

# Environment variables for Cloud Run
ENV PORT=8080
ENV SVAMI_HOST=0.0.0.0
ENV SVAMI_PORT=8080
ENV JANAPADA_URL=http://janapada:8081
ENV AMATYA_URL=http://amatya:8082

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Run the application
CMD ["python", "-m", "uvicorn", "src.svami-orchestrator.main:app", "--host", "0.0.0.0", "--port", "8080"]